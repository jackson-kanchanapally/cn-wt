//lalr.l

%{
#include <stdio.h>
#include "ytab.h"
%}

%%
[0-9]+{ yyval.dval = atoi(yytext);
          return DIGIT;
        }

\n \. return yytext[0]; 
%%

//lalr.y

%{
#include <stdio.h>
%}

%union {
    double dval;
}

%token <dval> DIGIT
%type <dval> expr term factor

%%

line : expr '\n' {
    printf("%g\n", $1);
}
;

expr : expr '+' term {
    $$ = $1 + $3;
}
     | term
;

term : term '*' factor {
    $$ = $1 * $3;
}
     | factor
;

factor : '(' expr ')' {
    $$ = $2;
}
       | DIGIT {
    $$ = $1;
}
;

%%

int main() {
    yyparse();
    return 0;
}

int yywrap() {
    return 1;
}

void yyerror(char *s) {
    printf("%s", s);
}

